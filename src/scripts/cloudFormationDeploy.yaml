AWSTemplateFormatVersion: 2010-09-09
Description: EC2 Instance with NGINX Reverse Proxy and Elastic IP

Resources:
  MySecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow all traffic
      SecurityGroupIngress:
        - IpProtocol: -1
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0
        - IpProtocol: -1
          FromPort: 0
          ToPort: 65535
          CidrIpv6: "::/0"

  LambdaFullAccessRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Path: /
      Policies:
        - PolicyName: LambdaFullAccessPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: "lambda:*"
                Resource: "*"

  ElasticIPManagementRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: "sts:AssumeRole"
      Path: /
      Policies:
        - PolicyName: ElasticIPManagementPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - "ec2:AllocateAddress"
                  - "ec2:AssociateAddress"
                  - "ec2:DescribeAddresses"
                Resource: "*"

  EIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  EC2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - Ref: LambdaFullAccessRole

  Ec2Instance:
    Type: "AWS::EC2::Instance"
    Properties:
      InstanceType: t2.micro
      IamInstanceProfile: !Ref EC2InstanceProfile
      ImageId: ami-039f5d5f278d91a6f
      SecurityGroupIds:
        - !Ref MySecurityGroup
      UserData: !Base64 |
        #!/bin/bash
        sudo apt-get update
        sudo apt-get install -y awscli nginx
        aws ec2 associate-address --instance-id $(curl -s http://169.254.169.254/latest/meta-data/instance-id) --allocation-id !GetAtt EIP.AllocationId --region ${AWS::Region}
        su - ubuntu -c "sudo -i -u ubuntu"
        su - ubuntu -c "curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.4/install.sh | bash"
        su - ubuntu -c "source ~/.nvm/nvm.sh && nvm install --lts"     
        cd /home/ubuntu/dist
        EIP=$(curl -s http://169.254.169.254/latest/meta-data/public-ipv4)
        sudo tee /etc/nginx/sites-available/reverse-proxy > /dev/null <<EOCONFIG
        server {
          listen 80;
          server_name $EIP;

          location / {
            proxy_pass http://localhost:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade \$http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host \$host;
            proxy_cache_bypass \$http_upgrade;
          }
        }
        EOCONFIG
        sudo ln -s /etc/nginx/sites-available/reverse-proxy /etc/nginx/sites-enabled/
        sudo systemctl restart nginx
        su - ubuntu -c "source ~/.nvm/nvm.sh && cd ~/dist && npm install"
        su - ubuntu -c "source ~/.nvm/nvm.sh && cd ~/dist && npm run run-server-ec2"
      Tags:
        - Key: EC2LambdaTestDeploy
          Value: MyTag
  EIPAssociation:
    Type: AWS::EC2::EIPAssociation
    DependsOn: Ec2Instance
    Properties:
      AllocationId: !GetAtt EIP.AllocationId
      InstanceId: !Ref Ec2Instance
